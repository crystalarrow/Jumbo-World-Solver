import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;


public class JumbleSolver {

	Map<String,Set<String>> map;
	public JumbleSolver() {
		map = new HashMap<String, Set<String>>();
		//map = new TreeMap<String, Set<String>>();
		loadWords();
	}
	
	private void loadWords() {
		// make a WordList
		WordList list = new WordList();

		loadWordsFromFile(list);// add all English words to list

		listToMap(list);

	}
	private void listToMap(WordList list) {
		// Go to each StringAndFreq in the list, get the String, standardize the
		// String, associate the standardized String with the Set of English words
		// that match the standardized String.
		String s = JOptionPane.showInputDialog(null, "Enter the word to be unsorted" ,"Jumble Solver", JOptionPane.QUESTION_MESSAGE);
		standardize(s);


	}
	private void loadWordsFromFile(WordList list) {
		// open the wordsEn.txt file and read them into the WordList. 
		JFileChooser fc = new JFileChooser();
		int returnVal = fc.showOpenDialog(null);
		File f = fc.getSelectedFile();

		if(f.exists()){
			try{
				BufferedReader br = new BufferedReader(new FileReader(f));
				String temp;
				while((temp = br.readLine()) != null){
					temp = temp.toLowerCase();
					temp = temp.replaceAll("[^a-z]-", "");
					
					StringAndFreq t = new StringAndFreq(temp);
					System.out.println(t);
					list.add(t);
				}
			}catch(Exception d){
				d.printStackTrace();
			}
		}
	}
	public Set<String> getSet(String s){
		// returns the Set<String> that is associated with the String s
		return null;

	}
	private String standardize(String s) {
		//returns a String with all of the characters in s arranged in 
		// alphabetical order.  
		// For example: s = "tough" would return "ghotu"
		//              s = "fancy" would return "acfny"
		s = s.toLowerCase();
		s = s.replaceAll("[^a-z]","");
		char temp;
		int l = 0;
		String stand = s;
		for(int i = 0; i < s.length(); i++){
			for(int x = 0; x < s.length(); x++){
				if(i != s.length()){
					if(s.charAt(i) > s.charAt(i+1)){
						temp = s.charAt(i);
						stand.replace(stand.charAt(l), temp);
						l++;
					}
				}
			}	
		}
		s = stand;
		return s;

	}
}
